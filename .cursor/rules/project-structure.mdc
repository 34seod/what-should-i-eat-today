# 프로젝트 폴더 구조 (Project Structure)

냉장고 앱의 Next.js 15 + TypeScript 프로젝트 폴더 구조입니다.

## 루트 디렉토리 구조

```
refrigerator/
├── .cursor/                    # Cursor 설정
│   └── rules/
│       ├── project-structure.mdc
│       ├── tech-stack.mdc
│       ├── prd.mdc
│       ├── project-scope.mdc
│       └── user-scenarios.mdc
├── .github/                    # GitHub 설정
│   └── workflows/
│       ├── ci.yml
│       └── deploy.yml
├── .next/                      # Next.js 빌드 파일 (자동 생성)
├── .vercel/                    # Vercel 배포 설정
├── public/                     # 정적 파일
│   ├── favicon.ico
│   ├── logo.svg
│   ├── images/
│   │   ├── icons/
│   │   ├── placeholders/
│   │   └── hero/
│   └── manifest.json
├── src/                        # 소스 코드 (TypeScript 전용)
│   ├── app/                    # Next.js App Router (모든 파일 .tsx)
│   │   ├── (auth)/            # 인증 관련 페이지 그룹
│   │   │   ├── login/
│   │   │   │   ├── page.tsx   # 로그인 페이지
│   │   │   │   └── loading.tsx
│   │   │   ├── signup/
│   │   │   │   ├── page.tsx   # 회원가입 페이지
│   │   │   │   └── loading.tsx
│   │   │   └── layout.tsx     # 인증 레이아웃
│   │   ├── (dashboard)/       # 대시보드 페이지 그룹
│   │   │   ├── my-fridge/     # 냉장고 관리
│   │   │   │   ├── page.tsx
│   │   │   │   ├── loading.tsx
│   │   │   │   └── error.tsx
│   │   │   ├── profile/       # 프로필 페이지
│   │   │   │   ├── page.tsx
│   │   │   │   └── edit/
│   │   │   │       └── page.tsx
│   │   │   └── layout.tsx     # 대시보드 레이아웃
│   │   ├── recipe/            # 레시피 페이지
│   │   │   ├── page.tsx       # 레시피 목록
│   │   │   ├── [id]/
│   │   │   │   ├── page.tsx   # 레시피 상세
│   │   │   │   ├── edit/
│   │   │   │   │   └── page.tsx # 레시피 수정
│   │   │   │   └── loading.tsx
│   │   │   ├── create/
│   │   │   │   └── page.tsx   # 레시피 생성
│   │   │   ├── search/
│   │   │   │   └── page.tsx   # 레시피 검색
│   │   │   └── category/
│   │   │       └── [slug]/
│   │   │           └── page.tsx # 카테고리별 레시피
│   │   ├── barcode/           # 바코드 스캔 페이지
│   │   │   ├── page.tsx
│   │   │   └── result/
│   │   │       └── page.tsx
│   │   ├── api/               # API Routes (모든 파일 .ts)
│   │   │   ├── auth/
│   │   │   │   ├── login/
│   │   │   │   │   └── route.ts
│   │   │   │   ├── logout/
│   │   │   │   │   └── route.ts
│   │   │   │   └── refresh/
│   │   │   │       └── route.ts
│   │   │   ├── recipes/
│   │   │   │   ├── route.ts   # GET, POST /api/recipes
│   │   │   │   ├── [id]/
│   │   │   │   │   └── route.ts # GET, PUT, DELETE /api/recipes/[id]
│   │   │   │   ├── search/
│   │   │   │   │   └── route.ts
│   │   │   │   └── recommend/
│   │   │   │       └── route.ts
│   │   │   ├── ingredients/
│   │   │   │   ├── route.ts   # GET, POST /api/ingredients
│   │   │   │   ├── [id]/
│   │   │   │   │   └── route.ts # GET, PUT, DELETE
│   │   │   │   ├── barcode/
│   │   │   │   │   └── route.ts # 바코드 스캔 결과
│   │   │   │   └── expiring/
│   │   │   │       └── route.ts # 유통기한 임박 재료
│   │   │   ├── users/
│   │   │   │   ├── profile/
│   │   │   │   │   └── route.ts
│   │   │   │   └── preferences/
│   │   │   │       └── route.ts
│   │   │   ├── reviews/
│   │   │   │   ├── route.ts
│   │   │   │   └── [id]/
│   │   │   │       └── route.ts
│   │   │   ├── bookmarks/
│   │   │   │   ├── route.ts
│   │   │   │   └── [id]/
│   │   │   │       └── route.ts
│   │   │   ├── upload/
│   │   │   │   ├── image/
│   │   │   │   │   └── route.ts # 이미지 업로드
│   │   │   │   └── recipe/
│   │   │   │       └── route.ts # 레시피 이미지
│   │   │   └── external/
│   │   │       ├── coupang/
│   │   │       │   └── route.ts # 쿠팡 파트너스 API
│   │   │       └── barcode/
│   │   │           └── route.ts # 외부 바코드 API
│   │   ├── globals.css        # 전역 스타일
│   │   ├── layout.tsx         # 루트 레이아웃
│   │   ├── page.tsx          # 홈페이지
│   │   ├── loading.tsx       # 글로벌 로딩 UI
│   │   ├── error.tsx         # 글로벌 에러 UI
│   │   ├── not-found.tsx     # 404 페이지
│   │   └── sitemap.ts        # 사이트맵 생성
│   ├── components/            # 재사용 컴포넌트 (모든 파일 .tsx)
│   │   ├── ui/               # shadcn/ui 기본 컴포넌트
│   │   │   ├── button.tsx
│   │   │   ├── input.tsx
│   │   │   ├── label.tsx
│   │   │   ├── modal.tsx
│   │   │   ├── dialog.tsx
│   │   │   ├── sheet.tsx
│   │   │   ├── toast.tsx
│   │   │   ├── card.tsx
│   │   │   ├── badge.tsx
│   │   │   ├── avatar.tsx
│   │   │   ├── dropdown-menu.tsx
│   │   │   ├── tabs.tsx
│   │   │   ├── select.tsx
│   │   │   ├── checkbox.tsx
│   │   │   ├── radio-group.tsx
│   │   │   ├── slider.tsx
│   │   │   ├── progress.tsx
│   │   │   ├── skeleton.tsx
│   │   │   └── scroll-area.tsx
│   │   ├── forms/            # 폼 관련 컴포넌트
│   │   │   ├── recipe-form.tsx
│   │   │   ├── ingredient-form.tsx
│   │   │   ├── review-form.tsx
│   │   │   ├── profile-form.tsx
│   │   │   ├── search-form.tsx
│   │   │   └── barcode-scanner.tsx
│   │   ├── layouts/          # 레이아웃 컴포넌트
│   │   │   ├── header.tsx
│   │   │   ├── footer.tsx
│   │   │   ├── sidebar.tsx
│   │   │   ├── navigation.tsx
│   │   │   ├── mobile-nav.tsx
│   │   │   └── breadcrumb.tsx
│   │   ├── recipe/           # 레시피 관련 컴포넌트
│   │   │   ├── recipe-card.tsx
│   │   │   ├── recipe-list.tsx
│   │   │   ├── recipe-grid.tsx
│   │   │   ├── recipe-detail.tsx
│   │   │   ├── recipe-steps.tsx
│   │   │   ├── recipe-ingredients.tsx
│   │   │   ├── recipe-reviews.tsx
│   │   │   ├── recipe-bookmark.tsx
│   │   │   ├── recipe-rating.tsx
│   │   │   ├── recipe-filter.tsx
│   │   │   └── recipe-search.tsx
│   │   ├── ingredient/       # 재료 관련 컴포넌트
│   │   │   ├── ingredient-card.tsx
│   │   │   ├── ingredient-list.tsx
│   │   │   ├── ingredient-grid.tsx
│   │   │   ├── expiry-tracker.tsx
│   │   │   ├── fridge-view.tsx
│   │   │   ├── ingredient-filter.tsx
│   │   │   └── barcode-result.tsx
│   │   ├── auth/             # 인증 관련 컴포넌트
│   │   │   ├── login-form.tsx
│   │   │   ├── signup-form.tsx
│   │   │   ├── oauth-buttons.tsx
│   │   │   ├── profile-menu.tsx
│   │   │   └── auth-guard.tsx
│   │   ├── common/           # 공통 컴포넌트
│   │   │   ├── image-upload.tsx
│   │   │   ├── image-carousel.tsx
│   │   │   ├── loading-spinner.tsx
│   │   │   ├── error-boundary.tsx
│   │   │   ├── confirmation-modal.tsx
│   │   │   ├── pagination.tsx
│   │   │   ├── search-bar.tsx
│   │   │   ├── filter-panel.tsx
│   │   │   ├── sort-dropdown.tsx
│   │   │   └── theme-toggle.tsx
│   │   └── providers/        # Context Provider 컴포넌트
│   │       ├── auth-provider.tsx
│   │       ├── theme-provider.tsx
│   │       ├── query-provider.tsx
│   │       └── toast-provider.tsx
│   ├── lib/                  # 유틸리티 및 설정 (모든 파일 .ts)
│   │   ├── supabase/         # Supabase 클라이언트 설정
│   │   │   ├── client.ts     # 클라이언트 사이드
│   │   │   ├── server.ts     # 서버 사이드
│   │   │   ├── middleware.ts # 미들웨어
│   │   │   └── storage.ts    # 스토리지 헬퍼
│   │   ├── auth/             # 인증 관련 로직
│   │   │   ├── config.ts     # OAuth 설정
│   │   │   ├── session.ts    # 세션 관리
│   │   │   └── guards.ts     # 권한 체크
│   │   ├── utils/            # 공통 유틸리티
│   │   │   ├── cn.ts         # 클래스명 유틸리티 (clsx)
│   │   │   ├── validation.ts # 입력값 유효성 검사
│   │   │   ├── format.ts     # 날짜, 숫자 포맷팅
│   │   │   ├── api.ts        # API 요청 헬퍼
│   │   │   ├── image.ts      # 이미지 처리 유틸리티
│   │   │   ├── barcode.ts    # 바코드 스캔 유틸리티
│   │   │   ├── recipe.ts     # 레시피 계산 로직
│   │   │   └── storage.ts    # 로컬 스토리지 헬퍼
│   │   ├── constants/        # 상수 정의
│   │   │   ├── index.ts      # 공통 상수
│   │   │   ├── api.ts        # API 엔드포인트
│   │   │   ├── routes.ts     # 라우트 경로
│   │   │   ├── recipe.ts     # 레시피 관련 상수
│   │   │   └── ingredient.ts # 재료 관련 상수
│   │   ├── schemas/          # Zod 스키마 정의
│   │   │   ├── auth.ts       # 인증 스키마
│   │   │   ├── recipe.ts     # 레시피 스키마
│   │   │   ├── ingredient.ts # 재료 스키마
│   │   │   ├── review.ts     # 리뷰 스키마
│   │   │   └── user.ts       # 사용자 스키마
│   │   └── external/         # 외부 API 연동
│   │       ├── coupang.ts    # 쿠팡 파트너스 API
│   │       ├── barcode.ts    # 바코드 스캔 API
│   │       └── food-db.ts    # 식품 데이터베이스 API
│   ├── hooks/                # 커스텀 React 훅 (모든 파일 .ts)
│   │   ├── auth/             # 인증 관련 훅
│   │   │   ├── use-auth.ts
│   │   │   ├── use-session.ts
│   │   │   └── use-profile.ts
│   │   ├── api/              # API 관련 훅 (React Query)
│   │   │   ├── use-recipes.ts
│   │   │   ├── use-ingredients.ts
│   │   │   ├── use-reviews.ts
│   │   │   ├── use-bookmarks.ts
│   │   │   └── use-users.ts
│   │   ├── ui/               # UI 상태 관련 훅
│   │   │   ├── use-modal.ts
│   │   │   ├── use-toast.ts
│   │   │   ├── use-theme.ts
│   │   │   ├── use-media-query.ts
│   │   │   └── use-local-storage.ts
│   │   ├── forms/            # 폼 관련 훅
│   │   │   ├── use-recipe-form.ts
│   │   │   ├── use-ingredient-form.ts
│   │   │   └── use-search-form.ts
│   │   └── utils/            # 유틸리티 훅
│   │       ├── use-debounce.ts
│   │       ├── use-intersection.ts
│   │       ├── use-camera.ts
│   │       └── use-geolocation.ts
│   ├── types/                # TypeScript 타입 정의 (모든 파일 .ts)
│   │   ├── database.ts       # Supabase 자동 생성 스키마 타입
│   │   ├── recipe.ts         # 레시피 관련 타입
│   │   ├── ingredient.ts     # 재료 관련 타입
│   │   ├── user.ts          # 사용자 관련 타입
│   │   ├── auth.ts          # 인증 관련 타입
│   │   ├── review.ts        # 리뷰 관련 타입
│   │   ├── api.ts           # API 응답 타입
│   │   ├── form.ts          # 폼 관련 타입
│   │   ├── ui.ts            # UI 컴포넌트 타입
│   │   └── external.ts      # 외부 API 타입
│   ├── stores/               # Zustand 상태 관리 (모든 파일 .ts)
│   │   ├── auth-store.ts     # 인증 상태
│   │   ├── fridge-store.ts   # 냉장고 상태
│   │   ├── recipe-store.ts   # 레시피 상태
│   │   ├── ui-store.ts       # UI 상태 (모달, 사이드바 등)
│   │   ├── filter-store.ts   # 필터/검색 상태
│   │   └── cart-store.ts     # 장보기 카트 상태
│   └── styles/               # 스타일 파일
│       ├── globals.css       # 전역 CSS (Tailwind 포함)
│       └── components.css    # 컴포넌트별 CSS
├── supabase/                 # Supabase 설정
│   ├── migrations/           # 데이터베이스 마이그레이션
│   │   ├── 001_initial_schema.sql
│   │   ├── 002_add_recipes.sql
│   │   ├── 003_add_ingredients.sql
│   │   ├── 004_add_reviews.sql
│   │   └── 005_add_rls_policies.sql
│   ├── seed.sql             # 초기 데이터
│   └── config.toml          # Supabase 설정
├── docs/                    # 프로젝트 문서
│   ├── README.md
│   ├── API.md              # API 문서
│   ├── DEPLOYMENT.md       # 배포 가이드
│   └── CONTRIBUTING.md     # 기여 가이드
├── tests/                  # 테스트 파일
│   ├── __mocks__/          # 목 데이터
│   ├── components/         # 컴포넌트 테스트
│   ├── pages/             # 페이지 테스트
│   ├── api/               # API 테스트
│   ├── utils/             # 유틸리티 테스트
│   └── e2e/               # E2E 테스트 (Playwright)
├── .env.local              # 로컬 환경 변수
├── .env.example           # 환경 변수 예제
├── .gitignore
├── .eslintrc.json         # ESLint 설정
├── .prettierrc            # Prettier 설정
├── tailwind.config.js     # Tailwind CSS 설정
├── next.config.js         # Next.js 설정
├── tsconfig.json          # TypeScript 설정
├── package.json           # 의존성 관리
├── pnpm-lock.yaml        # 패키지 락 파일
├── components.json        # shadcn/ui 설정
├── middleware.ts          # Next.js 미들웨어
└── README.md             # 프로젝트 소개
```

## 폴더별 역할 설명

### `/src/app` - Next.js App Router

- **페이지 파일**: 모든 파일이 `.tsx` 확장자
- **그룹 라우팅**: `(auth)`, `(dashboard)` 등으로 논리적 그룹화
- **동적 라우팅**: `[id]`, `[slug]` 등 동적 매개변수
- **API Routes**: `/api` 하위는 모두 `.ts` 파일

### `/src/components` - 재사용 컴포넌트

- **ui/**: shadcn/ui 기본 컴포넌트
- **forms/**: 폼 관련 컴포넌트
- **layouts/**: 레이아웃 컴포넌트
- **도메인별**: recipe/, ingredient/, auth/ 등 도메인별 분류

### `/src/lib` - 유틸리티 및 설정

- **supabase/**: 데이터베이스 클라이언트
- **auth/**: 인증 로직
- **utils/**: 공통 유틸리티 함수
- **schemas/**: Zod 유효성 검사 스키마

### `/src/hooks` - 커스텀 훅

- **도메인별 분류**: auth/, api/, ui/, forms/ 등
- **React Query**: API 관련 훅에서 서버 상태 관리
- **UI 상태**: 모달, 테마, 로컬 스토리지 등

### `/src/types` - TypeScript 타입

- **database.ts**: Supabase 자동 생성 타입
- **도메인별**: recipe.ts, ingredient.ts 등
- **API 타입**: 요청/응답 인터페이스

### `/src/stores` - Zustand 상태 관리

- **클라이언트 상태**: UI 상태, 필터, 카트 등
- **전역 상태**: 인증, 사용자 설정 등

## 파일 명명 규칙

### TypeScript 파일 확장자

- **React 컴포넌트**: `.tsx`
- **API Routes**: `.ts`
- **유틸리티/훅/타입**: `.ts`

### 폴더 및 파일명

- **kebab-case**: `recipe-card.tsx`, `my-fridge/`
- **camelCase**: 변수명, 함수명
- **PascalCase**: 컴포넌트명, 타입명

## 중요 설정 파일

### TypeScript 설정

- **tsconfig.json**: 엄격한 타입 검사 활성화
- **allowJs: false**: JavaScript 파일 사용 금지
- **strict: true**: 모든 엄격 모드 활성화

### 패스 별칭

```typescript
"paths": {
  "@/*": ["./src/*"],
  "@/components/*": ["./src/components/*"],
  "@/lib/*": ["./src/lib/*"],
  "@/types/*": ["./src/types/*"],
  "@/hooks/*": ["./src/hooks/*"]
}
```

이 구조는 [tech-stack.mdc](mdc:tech-stack.mdc)에서 정의한 기술 스택을 기반으로 하여 확장성과 유지보수성을 고려한 설계입니다.
description:
globs:
alwaysApply: false

---
